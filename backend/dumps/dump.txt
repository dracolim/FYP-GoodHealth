@app.route('/create_resident', methods=['POST'])
def create_resident():
    data = request.get_json()
    personal_details_query = f'INSERT INTO Personal_Details VALUES ('
    for column in data['Personal_Details']:
        value_to_insert = data['Personal_Details'][column]
        personal_details_query += "'" + value_to_insert+"',"
    personal_details_query = personal_details_query[:-3]
    personal_details_query += "'0'"
    personal_details_query += ')'
    connection.execute(personal_details_query)

    # remove personal details from data
    del data['Personal_Details']
    print(data, 'data now is what')

    for table in data:
        query = f'INSERT INTO {table} VALUES ('
        query_string_values = ''
        for col in data[table]:
            value_to_insert = data[table][col]
            query_string_values += "'" + value_to_insert+"',"
        query_string_values = query_string_values[:-3]
        query_string_values += "'0'"
        query_string_values += ')'
        query += query_string_values
        connection.execute(query)






    table.on("cellEdited", function (cell) {
        //cell - cell component
        var value = cell.getValue()
        var field = cell.getColumn().getDefinition()['field']
        console.log(cell.getRow().getData()['MCR_No'], 'row')
        var row = cell.getRow().getData()['MCR_No']
        var data1 = {
            "Table": "Personal_Details",
            "Field": field,
            "Value": value,
            "Row": row
        }

        axios({
                url: "http://localhost:5000/edit_field_value",
                data: data1,
                method: 'post'
            })
            .then(response => {
                console.log(response)
            })
            .catch(error => {
                console.log(error);
            });

@app.route('/edit_field_value', methods=['POST'])
def edit_field_value():
    data = request.get_json()
    print(data,'edit field DATA')
    table=data['Table']
    field = data['Field']
    value=data['Value']
    row=data['Row']
    
    update_query=f'UPDATE {table} SET {field} = \'{value}\' WHERE MCR_No = \'{row}\''
    print(update_query,'UPDATE QUERY')
    try:
        connection.execute(update_query)
        return jsonify(data.to_dict()), 201
    except Exception as e:
        print("An error occurred:", e)
        traceback.print_exc()
        return jsonify(
            {
                "Error Msg": "error occured"
            }
        ), 404

# Read Awards field/column name (R)
@app.route('/create_resident', methods=['POST'])
def create_resident():
    data = request.get_json()
    personal_details_query=f'INSERT INTO Personal_Details VALUES ('
    for column in data['Personal_Details']:
        value_to_insert=data['Personal_Details'][column]
        personal_details_query+="'" + value_to_insert+"',"
    personal_details_query=personal_details_query[:-3]
    personal_details_query+="'0'"
    personal_details_query+=')'
    connection.execute(personal_details_query)
